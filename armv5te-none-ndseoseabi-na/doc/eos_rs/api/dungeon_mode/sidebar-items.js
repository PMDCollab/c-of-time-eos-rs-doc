window.SIDEBAR_ITEMS = {"fn":[["advance_frame","Advances one frame. Does not return until the next frame starts."],["change_dungeon_music","Note: unverified, ported from Irdkwia’s notes"],["check_end_dungeon","Do the stuff when you lose in a dungeon."],["close_fixed_bin","Note: unverified, ported from Irdkwia’s notes"],["digit_count","Counts the number of digits in a nonnegative integer."],["display_actions","Graphically displays any pending actions that have happened but haven’t been shown on screen yet."],["display_char_texture_ui","Note: unverified, ported from Irdkwia’s notes"],["display_number_texture_ui","Note: unverified, ported from Irdkwia’s notes"],["display_ui","Note: unverified, ported from Irdkwia’s notes"],["fade_to_black","Fades the screen to black across several frames."],["get_chebyshev_distance","Returns the Chebyshev distance between two positions. Calculated as max(abs(x0-x1), abs(y0-y1))."],["get_direction_towards_position","Gets the direction in which a monster should move to go from the origin position to the target position."],["is_position_in_sight","Checks if a given target position is in sight from a given origin position."],["load_texture_ui","Note: unverified, ported from Irdkwia’s notes"],["open_fixed_bin","Note: unverified, ported from Irdkwia’s notes"],["open_menu","Note: unverified, ported from Irdkwia’s notes"],["reset_damage_calc_scratch_space","[`DungeonMonsterRef::calc_damage`] seems to use scratch space of some kind, which this function zeroes."],["reset_damage_data","Zeroes the damage data struct, which is output by the damage calculation function."],["set_both_screens_window_color_to_default","This changes the palettes of windows in both screens to an appropriate value depending on the playthrough."]],"mod":[["animations",""],["dungeon_generator","The dungeon generation as a collection of traits with two implementations."],["fixed_room",""],["items",""],["menus","Dungeon menu controller."],["sprites",""],["traps",""]],"struct":[["Dungeon","The Rust-safe wrapped master struct that contains the state of the dungeon. Can be owned or mutably borrowed from a low-level [`ffi::dungeon`]."],["DungeonEffectsEmitter","Helper struct for emitting move and item effects."],["DungeonEffectsInternals","Internal functions for battle effect calculations."],["DungeonMonsterMut","Mutable reference type for the info struct for [`DungeonEntity`] objects that are monsters."],["DungeonMonsterRef","Reference type for the info struct for [`DungeonEntity`] objects that are monsters."],["DungeonRng","Helper struct for dungeon RNG."],["DungeonTileGridIter","A iterator over the tiles in a dungeon tile grid."],["DungeonTileGridIterMut","A mutable iterator over the tiles in a dungeon tile grid."],["DungeonTileGridMut","See [`DungeonTileGridRead`] and [`DungeonTileGridWrite`]."],["DungeonTileGridRef","See [`DungeonTileGridRead`]."],["EntityTableMut","See [`EntityTableRead`] and [`EntityTableWrite`]."],["EntityTableRef","See [`EntityTableRead`]."],["GlobalDungeonData","Helper struct for dealing with the current floor, the global dungeon and the mission state."],["LogMessageBuilder","Builder for creating dungeon message log messages."]],"trait":[["DungeonMonsterRead","Trait for [`DungeonMonsterRef`] and [`DungeonMonsterMut`] (read operations)."],["DungeonMonsterSpeciesIdExt","Extension trait for [`MonsterSpeciesId`] specific to dungeon mode."],["DungeonMonsterWrite","Trait for [`DungeonMonsterMut`] (write operations)."],["DungeonMoveExt","Extension trait for [`Move`] specific to dungeon mode."],["DungeonMoveIdExt","Extension trait for [`MoveId`] specific to dungeon mode."],["DungeonTileGridRead","Functions for reading from a tile grid."],["DungeonTileGridWrite","Functions for writing into a tile grid."],["EntityTableRead","Functions for reading data from an entity table."],["EntityTableWrite","Functions for writing data into an entity table."]],"type":[["DungeonEntity","Entity in a dungeon. Has a [`DungeonEntityType`]."],["DungeonItem","Extended info struct for [`DungeonEntity`] objects that are items."],["DungeonTile","A struct representing a single dungeon tile."],["DungeonTrap","Extended info struct for [`DungeonEntity`] objects that are traps."]]};